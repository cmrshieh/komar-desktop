import qualified Data.Map as M
import System.IO
import qualified System.IO.UTF8
import XMonad
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.DynamicHooks
import XMonad.Hooks.ManageDocks
import XMonad.Hooks.ManageHelpers
import XMonad.Hooks.UrgencyHook
import XMonad.Util.Run(spawnPipe)
import XMonad.Util.EZConfig
import XMonad.Util.Scratchpad
import XMonad.StackSet as W hiding(layout, workspaces)
import XMonad.Layout.NoBorders
import XMonad.Layout.WorkspaceDir
import XMonad.Layout.Named
import XMonad.Prompt
import XMonad.Prompt.Workspace

browser = "firefox"

myLayoutHook = workspaceDir("~") . smartBorders . avoidStruts $
	named "[|]" tall |||
	named "[-]" (Mirror tall) |||
	named "[F]" Full
	where
	tall = Tall 1 delta ratio 
	delta = (3/100)
	ratio = toRational ((1-sqrt(5))/2)



myLogHook pipe = dynamicLogWithPP $ xmobarPP {
	ppOutput = System.IO.UTF8.hPutStrLn pipe,
	ppTitle = xmobarColor "#73d216" "" . shorten 50,
	ppCurrent = xmobarColor "#c4a000" "" .  wrap "[" "]",
	ppUrgent = xmobarColor "#dd0000" "",
	ppSep = xmobarColor "#aaaaaa" "" " | "
}

myScratchpadManageHook = scratchpadManageHook(W.RationalRect 0.25 0.33 0.5 0.33) 
myManageHook = myScratchpadManageHook <+> manageDocks <+> manageHook defaultConfig

xpconfig = defaultXPConfig {
	font        = "-misc-fixed-*-*-*-*-10-*-*-*-*-*-*-*",
	bgColor     = "#000000",
	fgColor     = "#aaaaaa",
	bgHLight    = "#cccccc",
	fgHLight    = "#000000",
	promptBorderWidth = 0,
	height = 10
}

floatSearchResult dhRef = oneShotHook dhRef (className =? "Firefox") (doRectFloat $ W.RationalRect 0.15 0.15 0.7 0.7)

main = do
	xmproc <- spawnPipe "/usr/bin/xmobar /home/komar/.xmonad/xmobar1"
	dynHooksRef <- initDynamicHooks
	xmonad $ withUrgencyHook NoUrgencyHook $ defaultConfig {
		manageHook = myManageHook <+> dynamicMasterHook dynHooksRef,
		layoutHook = myLayoutHook,
		logHook = myLogHook xmproc,
		focusFollowsMouse = False,
		modMask = mod4Mask,
		normalBorderColor = "#000000",
		focusedBorderColor = "#3465a4",
		terminal = "urxvt",
		workspaces = ["c1", "c2", "doc", "sys", "web1", "web2", "web3", "im", "trash"]
	} `additionalKeysP` (myKeys dynHooksRef) `additionalKeys` myKeysMulti


dmenu_opts = "dmenu -fn -misc-fixed-*-*-*-*-10-*-*-*-*-*-*-* -b -nb '#000000' -nf '#aaaaaa' -sb '#204a87' -sf '#aaaaaa'"
dmenu_exe = "exe=`dmenu_path | " ++ dmenu_opts ++  "` && $exe"

myKeys dhRef = [
	("M-`",        workspacePrompt xpconfig (windows . W.view)),
	("M-S-`",      workspacePrompt xpconfig (windows . W.shift)),
	("M-p",        spawn (dmenu_exe)),
	("M-s",        scratchpadSpawnActionTerminal "urxvt"),
	("M-d",        changeDir xpconfig)]

myKeysMulti = [
	((0,                    xK_Menu                 ), spawn (dmenu_exe)),
	((0,                    xK_XF86AudioPlay        ), spawn ("mpc toggle")),
	((0,                    xK_XF86AudioStop        ), spawn ("mpc stop")),
	((0,                    xK_XF86AudioPrev        ), spawn ("mpc prev")),
	((0,                    xK_XF86AudioNext        ), spawn ("mpc next")),
	((0,                    xK_XF86AudioMute        ), spawn ("amixer -q set Master toggle")),
	((0,                    xK_XF86AudioLowerVolume ), spawn ("amixer set Master 2dB-")),
	((0,                    xK_XF86AudioRaiseVolume ), spawn ("amixer set Master 2dB+"))]

xK_XF86AudioLowerVolume = 0x1008ff11
xK_XF86AudioMute = 0x1008ff12
xK_XF86AudioRaiseVolume = 0x1008ff13
xK_XF86AudioStop = 0x1008ff15
xK_XF86AudioPlay = 0x1008ff14
xK_XF86AudioPrev = 0x1008ff16
xK_XF86AudioNext = 0x1008ff17
